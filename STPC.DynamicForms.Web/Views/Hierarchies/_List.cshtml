@model ICollection<STPC.DynamicForms.Web.Services.Entities.Hierarchy>

<fieldset>
    <legend></legend>
    <ul id="HierarchiesTreeView">
        <li>Jerarquias<span class="ui-icon ui-icon-plusthick ui-state-default ui-corner-all"
            style="display: inline-block" title="Agregar hijo" onclick="alert('not implemented yet')"></span>

            @OrgTree(Model, null)
            @helper OrgTree(ICollection<STPC.DynamicForms.Web.Services.Entities.Hierarchy> nodes, STPC.DynamicForms.Web.Services.Entities.Hierarchy parent)
{
    if (nodes.Any(n => n.Parent == parent))
    { 
                <ul>
                    @foreach (var node in nodes.Where(o => o.Parent == parent))
                    {
                        <li style="padding-left: 25px; padding-bottom: 5px;">@node.Level |
                            @node.Name
                            @Html.ActionLink(" ", "Create", new { parentId = node.Id }, new { style = "display:inline-block; margin-left: 5px;", @class = "ui-icon ui-icon-plusthick ui-state-default ui-corner-all NewLinkJerarquias", title = "Nuevo" })
                            @Html.ActionLink(" ", "Edit", new { NodeId = node.Id, }, new { style = "display:inline-block; margin-left: 5px;", @class = "ui-icon ui-icon-document-b ui-state-default ui-corner-all EditLinkJerarquias", title = "Editar" })

                            @*<span class="ui-icon ui-icon-plusthick ui-state-default ui-corner-all" style="display:inline-block; margin-left: 5px;" title="Agregar hijo" onclick="addchild('@node.Id');"></span>*@
                            @*<span class="ui-icon ui-icon-document-b ui-state-default ui-corner-all" style="display:inline-block; margin-left: 5px;" title="Editar" onclick="EdtiNode('@node.Id');"></span>*@
                            <span class="ui-icon ui-icon-trash ui-state-default ui-corner-all" style="display:inline-block; margin-left: 5px;" title="Eliminar" data-key="@node.Id" onclick="deleteme('@node.Id');"></span>
                            @OrgTree(nodes, node)
                        </li>
                    }
                </ul>
    }
            }
        </li>
    </ul>
</fieldset>
<div id="modalCrearNodo" title="Crear nodo" style="display: none; width: 800px">
</div>
<div id="EditmodalContent" title="Edit nodo" style="display: none; width: 800px">
</div>
<script type="text/javascript">
    function SetRequiered() {
        var campos = $('input[type="text"]:required');
        $(campos).each(function () {
            $(this).live('keyup', function () {
                if ($(this).val() != "") {
                    $(this).removeClass('notFilled');
                }
                else {
                    $(this).addClass('notFilled');
                }
            });
        });
    }

    function ValidarRequeridosJerarquias() {
        var correcto = true;
        var campos = $('input[type="text"]:required');
        var select = $('select:required');
        $(campos).each(function () {
            if ($(this).val() == '') {
                correcto = false;
                $(this).addClass('notFilled');

                $(this).live('keyup', function () {
                    if ($(this).val() != "") {
                        $(this).removeClass('notFilled');
                    }
                    else {
                        $(this).addClass('notFilled');
                    }
                });
            }
        });
        $(select).each(function () {
            if ($(this).val() == '') {
                correcto = false;
                $(this).addClass('notFilled');
                $(this).live('keyup', function () {
                    if ($(this).val() != "") {
                        $(this).removeClass('notFilled');
                    }
                    else {
                        $(this).addClass('notFilled');
                    }
                });
            }
        });
        return correcto;
    }
    $('input[type="text"]:required').click(function () {
        $(this).removeClass('notFilled');
    });



    $(function () {
        $(".NewLinkJerarquias").button();
        $('#modalCrearNodo').dialog({
            autoOpen: false,
            width: 650,
            resizable: false,
            modal: true,
            buttons: {
                "Actualizar": function () {
                    $("#txtHierarchyName").keyup(function () {
                        if ($(this).val() != "") {
                            $(this).removeClass('notFilled');
                        }
                    });
                    if ($("#txtHierarchyName").val() == '') {
                        $("#txtHierarchyName").addClass('notFilled');
                        return;
                    }
                    else {
                        $("#txtHierarchyName").removeClass('notFilled');
                    }
                    if (ValidarRequeridosJerarquias()) {

                        $("#updateJerarquiaFormNew").submit();
                    }



                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });

        $(".NewLinkJerarquias").click(function () {
            linkObj = $(this);
            var dialogDiv = $('#modalCrearNodo');
            var viewUrl = linkObj.attr('href');
            $.get(viewUrl, function (data) {
                dialogDiv.html(data);
                var $form = $("#updateJerarquiaFormNew");
                $form.unbind();
                $form.data("validator", null);
                $.validator.unobtrusive.parse(document);
                $form.validate($form.data("unobtrusiveValidation").options);
                dialogDiv.dialog('open');
            });
            return false;
        });
    });


    $(function () {
        $(".EditLinkJerarquias").button();
        $(".decorated").button();
        $('#EditmodalContent').dialog({
            autoOpen: false,
            width: 650,
            resizable: false,
            modal: true,
            buttons: {
                "Actualizar": function () {
                    $("#txtHierarchyNameEdit").keyup(function () {
                        if ($(this).val() != "") {
                            $(this).removeClass('notFilled');
                        }
                    });
                    if ($("#txtHierarchyNameEdit").val() == '') {
                        $("#txtHierarchyNameEdit").addClass('notFilled');
                        return;
                    }
                    else {
                        $("#txtHierarchyNameEdit").removeClass('notFilled');
                    }
                    if (ValidarRequeridosJerarquias()) {
                        $("#updateJerarquiaFormEdit").submit();
                    }
                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });

        $(".EditLinkJerarquias").click(function () {
            
            linkObj = $(this);
            var dialogDiv = $('#EditmodalContent');
            var viewUrl = linkObj.attr('href');
            $.get(viewUrl, function (data) {
                dialogDiv.html(data);
                var $form = $("#updateJerarquiaFormEdit");
                $form.unbind();
                $form.data("validator", null);
                $.validator.unobtrusive.parse(document);
                $form.validate($form.data("unobtrusiveValidation").options);
                dialogDiv.dialog('open');
            });
            return false;
        });
    });


    function updateSuccessCreate(data) {
        $("#CustomerForm").submit();
        $('#modalContent').dialog("close");
        $('#EditmodalContent').dialog("close");

        alert('Nodo de jerarquia guardado con éxito');
    }

    function updateSuccessUpdate(data) {
        $("#CustomerForm").submit();
        $('#EditmodalContent').dialog("close");

        alert('Nodo de jerarquia actualizado con éxito');
    }

    function deleteme(key) {
        if (confirm("¿Seguro de borrar esta página?")) {
            var theiteminthelist = $('span[data-key=' + key + ']').parent();
            $.post("/Hierarchies/DeleteHierarchy", { id: key },
                    function (data) {
                        if (data.Success == true) {
                            $(theiteminthelist).remove();
                        }
                        else alert("Delete failed");
                    }, "json");
        }
    }
</script>


