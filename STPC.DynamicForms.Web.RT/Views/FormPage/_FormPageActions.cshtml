@model List<STPC.DynamicForms.Web.RT.Services.Entities.FormPageActions>
@{
    ViewBag.Title = "FormPageActions";
}
@*@section JavascriptInHead
{

    <script src="../../Scripts/FormPage/_FormPageActions.js"></script>
}*@

<script src="@Url.Content("~/Scripts/accounting.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/accounting.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FormPage/_FormPageActions.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/ScriptsLiSim/JqueryLisimAdmin.js")" type="text/javascript"></script>



<div id="Acciones">
    @foreach (var action in Model)
    {
        var divName = "action_" + action.Name;
        var formNames = @ViewData["FormName"].ToString().Replace(" ", "_");
        <input name="@action.Name/@action.Save/@action.GoToPageId/@action.Uid/@action.IsExecuteStrategy" id="@action.Name/@action.Uid" type="submit" value="@action.Caption" class="btnAtions decoratedButton" formnovalidate="formnovalidate"/>
    }
</div>


<div id="dvFormReport"></div>
<div id="dvBack"></div>
@Html.Hidden("txtSender")
@Html.Hidden("isValid", 0)

<script type="text/javascript">
    var focus = 0, blur = 0;

    $(document).ready(function () {
        //Trae el nombre de los usuarios a los campos con un estilo determinado //basico1Usuario_input
        traernombreusuario();

        //Recore los ul inactivos para inactivar el link al archivo
        inactivaLabelFileUpload();

        onloadEvents()


        //cONSULTA PageMathOperation
        CargarFormulas();

        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });

    function formatMoney(number, places, symbol, thousand, decimal) {
        number = number || 0;
        places = !isNaN(places = Math.abs(places)) ? places : 0;
        symbol = symbol !== undefined ? symbol : "$";
        thousand = thousand || ".";
        decimal = decimal || ",";
        var negative = number < 0 ? "-" : "",
            i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + "",
            j = (j = i.length) > 3 ? j % 3 : 0;
        return symbol + negative + (j ? i.substr(0, j) + thousand : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : "");
    }

    // To create it as a library method:
    accounting.formatMoney = function (number, places, symbol, thousand, decimal) {
        /* as above */
    }

    function decimalPlaces(num) {
        var match = ('' + num).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
        if (!match) { return 0; }
        return Math.max(
             0,
             // Number of digits right of decimal point.
             (match[1] ? match[1].length : 0)
             // Adjust for scientific notation.
             - (match[2] ? +match[2] : 0));
    }


    function updateSuccess() {
        $("#fileUp").val('');
    }


    jQuery.fn.textWidth = function () {
        var _t = jQuery(this);
        var html_org = _t.html();
        if (_t[0].nodeName == 'INPUT') {
            html_org = _t.val();
        }
        var html_calcS = '<span>' + html_org + '</span>';
        jQuery('body').append(html_calcS);
        var _lastspan = jQuery('span').last();
        //console.log(_lastspan, html_calc);
        _lastspan.css({
            'font-size': _t.css('font-size')
            , 'font-family': _t.css('font-family')
        })
        var width = _lastspan.width() + 5;
        //_t.html(html_org);
        _lastspan.remove();
        return width;
    };

    $(".tooltip").wTooltip({
        content: $(this).attr('title'),
        className: "arrow_box",
        style: false//remove all pre-set inline styles 

    });
    function ValidateDate(dtValue) {
        if (dtValue != "") {
            var dtRegex = new RegExp(/^(?:(?:(?:0?[13578]|1[02])(\/|-)31)|(?:(?:0?[1,3-9]|1[0-2])(\/|-)(?:29|30)))(\/|-)(?:[1-9]\d\d\d|\d[1-9]\d\d|\d\d[1-9]\d|\d\d\d[1-9])$|^(?:(?:0?[1-9]|1[0-2])(\/|-)(?:0?[1-9]|1\d|2[0-8]))(\/|-)(?:[1-9]\d\d\d|\d[1-9]\d\d|\d\d[1-9]\d|\d\d\d[1-9])$|^(0?2(\/|-)29)(\/|-)(?:(?:0[48]00|[13579][26]00|[2468][048]00)|(?:\d\d)?(?:0[48]|[2468][048]|[13579][26]))$/);
            return dtRegex.test(dtValue);
        }
        else {

            return true
        }

    }
    $(".hasDatepicker").focusout(function () {

        var dtVal = $(this).val();
        if (ValidateDate(dtVal) == false) {
            $(this).addClass('notFilled');
        }
        else {
            $(this).removeClass('notFilled');
        }
    });

    $(".email").focusout(function () {

        if (!validateEmail($(this).val().trim()) && $(this).val() != "") {
            $(this).addClass('notFilled');
            alert("Ingrese un correo electrónico válido")
        }
        else
            $(this).removeClass('notFilled');

    });


    //$(".CustomInteger").numeric(false, function () { this.focus(); });  
    $(".CustomDecimal").numeric({ decimal: ".", decimalPlaces: 2 });

    function validateEmail($email) {

        var emailReg = /^([\da-z_\.-]+)@@([\da-z\.-]+)\.([a-z\.]{2,6})$/;
        if (!emailReg.test($email)) {
            return false;
        } else {
            return true;
        }
    }
   
    function blockScreen() {
        $.blockUI({
            message: 'Procesando',
            css: {
                border: 'none',
                padding: '15px',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                opacity: .5,
                color: '#fff'
            }
        });
    }
    function blockScreenMessage(Mensaje) {
        $.blockUI({
            message: Mensaje,
            css: {
                border: 'none',
                padding: '15px',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                opacity: .5,
                color: '#fff'
            }
        });
    }
   
    function strategyRedirect(ActionId) {

        var form = $("#frmPage");
        var disabled = form.find(':input:disabled').removeAttr('disabled');
        var a = form.serializeArray();
        var formCollection = form.serialize();
        disabled.attr('disabled', 'disabled');

        $.ajax({
            type: "POST",
            url: "/FormPage/GoToSpecificPage/",
            data: {
                'campos': a, 'ActionId': ActionId, 'uidAction': ActionId
            },
            dataType: "html",
            success: function (evt) {
                $('#FormPageAnswers').html(evt);
                $.unblockUI();

            },
            error: function (req, status, error) {
                var urlSite = window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
                location.href = urlSite
                $.unblockUI();
            }
        });

    }
    $(".CustomCurrency").focusout(function () {
      
        console.log("CustomCurrency")
        applyFormatCurrency($(this));
      

    })
    $(".ValidateMinValue").focusout(function () {
        console.log("ValidateMinValue")
        var className = $(this).attr('class');
        var valuesText2 = $(this).val().replace("$", '');

        if (/CustomInteger/.test(className) || /CustomDecimal/.test(className))
            valuesText2 = valuesText2.replace(/\,/g, '')
        if (/CustomCurrency/.test(className))
            valuesText2 = valuesText2.replace(/\./g, '')

        var minValue = parseInt($(this).prop('min'));
        var value = parseInt(valuesText2);


        if (minValue > value) {
            alert("Ingrese un valor mayor o igual a: " + minValue)
            $(this).addClass('notFilled');
            return;
        }
        else
            $(this).removeClass('notFilled');


        var MaxValue = parseInt($(this).prop('max'));

        if (MaxValue < value) {
            alert("Ingrese un valor menor o igual a: " + MaxValue)
            $(this).addClass('notFilled');
            return;

        }
        else
            $(this).removeClass('notFilled');
    });
</script>
