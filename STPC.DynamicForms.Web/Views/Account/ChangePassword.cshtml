@model STPC.DynamicForms.Web.Models.ChangePasswordModel

@{
    ViewBag.Title = "Cambiar contraseña";
}
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
<h2>Cambiar contraseña</h2>

<h2>Las nuevas contraseñas deben tener un mínimo de @Membership.MinRequiredPasswordLength characteres
</h2>
 

@using (Ajax.BeginForm("ChangePassword", "Account", new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST",
    OnSuccess = "updateSuccessChangePassword"
}, new { @id = "updateModeloFormNew" }))
{
   @Html.HiddenFor(model => model.TempUserName)
    <div>
        <fieldset class="StylePanelDefault">
             @Html.ValidationSummary(true, "Cambio de contraseña no tuvo éxito. Por favor, corrija los errores e inténtelo de nuevo.")
            
            <legend>Información de la cuenta</legend>
             @if (this.User.Identity.IsAuthenticated)
             {
                <div class="editor-label">
                    @Html.LabelFor(m => m.OldPassword)
                </div>
                <div class="editor-field">
                    @Html.PasswordFor(m => m.OldPassword)
                    @Html.ValidationMessageFor(m => m.OldPassword)
                </div>
             }
            <div class="editor-label">
                @Html.LabelFor(m => m.NewPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.NewPassword)
                @Html.ValidationMessageFor(m => m.NewPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <p>
                <input type="submit" value="Cambiar contraseña" />
            </p>
        </fieldset>
    </div>
}
