//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18046.
// 
#pragma warning disable 1591

namespace STPC.DynamicForms.DecisionEngine.ScortoWSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ScoringServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ScoringService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginUserOperationCompleted;
        
        private Ticket ticketValueField;
        
        private System.Threading.SendOrPostCallback GetStrategyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicNameListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateApplicationByStrategyIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateApplicationByPublicNameIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategySchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategyExampleXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestStrategyIdByStrategyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedStrategiesByPublicNameIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ScoringService() {
            this.Url = global::STPC.DynamicForms.DecisionEngine.Properties.Settings.Default.STPC_DynamicForms_DecisionEngine_ScortoWSProxy_ScoringService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Ticket TicketValue {
            get {
                return this.ticketValueField;
            }
            set {
                this.ticketValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginUserCompletedEventHandler LoginUserCompleted;
        
        /// <remarks/>
        public event GetStrategyListCompletedEventHandler GetStrategyListCompleted;
        
        /// <remarks/>
        public event GetPublicNameListCompletedEventHandler GetPublicNameListCompleted;
        
        /// <remarks/>
        public event CreateApplicationByStrategyIdCompletedEventHandler CreateApplicationByStrategyIdCompleted;
        
        /// <remarks/>
        public event CreateApplicationByPublicNameIdCompletedEventHandler CreateApplicationByPublicNameIdCompleted;
        
        /// <remarks/>
        public event GetApplicationStatusCompletedEventHandler GetApplicationStatusCompleted;
        
        /// <remarks/>
        public event GetApplicationResultCompletedEventHandler GetApplicationResultCompleted;
        
        /// <remarks/>
        public event GetStrategySchemaCompletedEventHandler GetStrategySchemaCompleted;
        
        /// <remarks/>
        public event GetStrategyExampleXMLCompletedEventHandler GetStrategyExampleXMLCompleted;
        
        /// <remarks/>
        public event GetLatestStrategyIdByStrategyNameCompletedEventHandler GetLatestStrategyIdByStrategyNameCompleted;
        
        /// <remarks/>
        public event GetLinkedStrategiesByPublicNameIdCompletedEventHandler GetLinkedStrategiesByPublicNameIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginUser(string userName, string password) {
            object[] results = this.Invoke("LoginUser", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginUserAsync(string userName, string password) {
            this.LoginUserAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LoginUserAsync(string userName, string password, object userState) {
            if ((this.LoginUserOperationCompleted == null)) {
                this.LoginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginUserOperationCompleted);
            }
            this.InvokeAsync("LoginUser", new object[] {
                        userName,
                        password}, this.LoginUserOperationCompleted, userState);
        }
        
        private void OnLoginUserOperationCompleted(object arg) {
            if ((this.LoginUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStrategyList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStrategyList() {
            object[] results = this.Invoke("GetStrategyList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategyListAsync() {
            this.GetStrategyListAsync(null);
        }
        
        /// <remarks/>
        public void GetStrategyListAsync(object userState) {
            if ((this.GetStrategyListOperationCompleted == null)) {
                this.GetStrategyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategyListOperationCompleted);
            }
            this.InvokeAsync("GetStrategyList", new object[0], this.GetStrategyListOperationCompleted, userState);
        }
        
        private void OnGetStrategyListOperationCompleted(object arg) {
            if ((this.GetStrategyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategyListCompleted(this, new GetStrategyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPublicNameList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPublicNameList() {
            object[] results = this.Invoke("GetPublicNameList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicNameListAsync() {
            this.GetPublicNameListAsync(null);
        }
        
        /// <remarks/>
        public void GetPublicNameListAsync(object userState) {
            if ((this.GetPublicNameListOperationCompleted == null)) {
                this.GetPublicNameListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicNameListOperationCompleted);
            }
            this.InvokeAsync("GetPublicNameList", new object[0], this.GetPublicNameListOperationCompleted, userState);
        }
        
        private void OnGetPublicNameListOperationCompleted(object arg) {
            if ((this.GetPublicNameListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicNameListCompleted(this, new GetPublicNameListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateApplicationByStrategyId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateApplicationByStrategyId(int strategyId, string parametersData) {
            object[] results = this.Invoke("CreateApplicationByStrategyId", new object[] {
                        strategyId,
                        parametersData});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateApplicationByStrategyIdAsync(int strategyId, string parametersData) {
            this.CreateApplicationByStrategyIdAsync(strategyId, parametersData, null);
        }
        
        /// <remarks/>
        public void CreateApplicationByStrategyIdAsync(int strategyId, string parametersData, object userState) {
            if ((this.CreateApplicationByStrategyIdOperationCompleted == null)) {
                this.CreateApplicationByStrategyIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateApplicationByStrategyIdOperationCompleted);
            }
            this.InvokeAsync("CreateApplicationByStrategyId", new object[] {
                        strategyId,
                        parametersData}, this.CreateApplicationByStrategyIdOperationCompleted, userState);
        }
        
        private void OnCreateApplicationByStrategyIdOperationCompleted(object arg) {
            if ((this.CreateApplicationByStrategyIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateApplicationByStrategyIdCompleted(this, new CreateApplicationByStrategyIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateApplicationByPublicNameId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateApplicationByPublicNameId(int publicNameId, string parametersData) {
            object[] results = this.Invoke("CreateApplicationByPublicNameId", new object[] {
                        publicNameId,
                        parametersData});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateApplicationByPublicNameIdAsync(int publicNameId, string parametersData) {
            this.CreateApplicationByPublicNameIdAsync(publicNameId, parametersData, null);
        }
        
        /// <remarks/>
        public void CreateApplicationByPublicNameIdAsync(int publicNameId, string parametersData, object userState) {
            if ((this.CreateApplicationByPublicNameIdOperationCompleted == null)) {
                this.CreateApplicationByPublicNameIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateApplicationByPublicNameIdOperationCompleted);
            }
            this.InvokeAsync("CreateApplicationByPublicNameId", new object[] {
                        publicNameId,
                        parametersData}, this.CreateApplicationByPublicNameIdOperationCompleted, userState);
        }
        
        private void OnCreateApplicationByPublicNameIdOperationCompleted(object arg) {
            if ((this.CreateApplicationByPublicNameIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateApplicationByPublicNameIdCompleted(this, new CreateApplicationByPublicNameIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplicationStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplicationStatus(long applicationID) {
            object[] results = this.Invoke("GetApplicationStatus", new object[] {
                        applicationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationStatusAsync(long applicationID) {
            this.GetApplicationStatusAsync(applicationID, null);
        }
        
        /// <remarks/>
        public void GetApplicationStatusAsync(long applicationID, object userState) {
            if ((this.GetApplicationStatusOperationCompleted == null)) {
                this.GetApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("GetApplicationStatus", new object[] {
                        applicationID}, this.GetApplicationStatusOperationCompleted, userState);
        }
        
        private void OnGetApplicationStatusOperationCompleted(object arg) {
            if ((this.GetApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationStatusCompleted(this, new GetApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplicationResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplicationResult(long applicationID) {
            object[] results = this.Invoke("GetApplicationResult", new object[] {
                        applicationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationResultAsync(long applicationID) {
            this.GetApplicationResultAsync(applicationID, null);
        }
        
        /// <remarks/>
        public void GetApplicationResultAsync(long applicationID, object userState) {
            if ((this.GetApplicationResultOperationCompleted == null)) {
                this.GetApplicationResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationResultOperationCompleted);
            }
            this.InvokeAsync("GetApplicationResult", new object[] {
                        applicationID}, this.GetApplicationResultOperationCompleted, userState);
        }
        
        private void OnGetApplicationResultOperationCompleted(object arg) {
            if ((this.GetApplicationResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationResultCompleted(this, new GetApplicationResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStrategySchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStrategySchema(int strategyId) {
            object[] results = this.Invoke("GetStrategySchema", new object[] {
                        strategyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategySchemaAsync(int strategyId) {
            this.GetStrategySchemaAsync(strategyId, null);
        }
        
        /// <remarks/>
        public void GetStrategySchemaAsync(int strategyId, object userState) {
            if ((this.GetStrategySchemaOperationCompleted == null)) {
                this.GetStrategySchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategySchemaOperationCompleted);
            }
            this.InvokeAsync("GetStrategySchema", new object[] {
                        strategyId}, this.GetStrategySchemaOperationCompleted, userState);
        }
        
        private void OnGetStrategySchemaOperationCompleted(object arg) {
            if ((this.GetStrategySchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategySchemaCompleted(this, new GetStrategySchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStrategyExampleXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStrategyExampleXML(int strategyId) {
            object[] results = this.Invoke("GetStrategyExampleXML", new object[] {
                        strategyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategyExampleXMLAsync(int strategyId) {
            this.GetStrategyExampleXMLAsync(strategyId, null);
        }
        
        /// <remarks/>
        public void GetStrategyExampleXMLAsync(int strategyId, object userState) {
            if ((this.GetStrategyExampleXMLOperationCompleted == null)) {
                this.GetStrategyExampleXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategyExampleXMLOperationCompleted);
            }
            this.InvokeAsync("GetStrategyExampleXML", new object[] {
                        strategyId}, this.GetStrategyExampleXMLOperationCompleted, userState);
        }
        
        private void OnGetStrategyExampleXMLOperationCompleted(object arg) {
            if ((this.GetStrategyExampleXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategyExampleXMLCompleted(this, new GetStrategyExampleXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestStrategyIdByStrategyName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLatestStrategyIdByStrategyName(string strategyName) {
            object[] results = this.Invoke("GetLatestStrategyIdByStrategyName", new object[] {
                        strategyName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestStrategyIdByStrategyNameAsync(string strategyName) {
            this.GetLatestStrategyIdByStrategyNameAsync(strategyName, null);
        }
        
        /// <remarks/>
        public void GetLatestStrategyIdByStrategyNameAsync(string strategyName, object userState) {
            if ((this.GetLatestStrategyIdByStrategyNameOperationCompleted == null)) {
                this.GetLatestStrategyIdByStrategyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestStrategyIdByStrategyNameOperationCompleted);
            }
            this.InvokeAsync("GetLatestStrategyIdByStrategyName", new object[] {
                        strategyName}, this.GetLatestStrategyIdByStrategyNameOperationCompleted, userState);
        }
        
        private void OnGetLatestStrategyIdByStrategyNameOperationCompleted(object arg) {
            if ((this.GetLatestStrategyIdByStrategyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestStrategyIdByStrategyNameCompleted(this, new GetLatestStrategyIdByStrategyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLinkedStrategiesByPublicNameId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLinkedStrategiesByPublicNameId(int publicNameId) {
            object[] results = this.Invoke("GetLinkedStrategiesByPublicNameId", new object[] {
                        publicNameId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedStrategiesByPublicNameIdAsync(int publicNameId) {
            this.GetLinkedStrategiesByPublicNameIdAsync(publicNameId, null);
        }
        
        /// <remarks/>
        public void GetLinkedStrategiesByPublicNameIdAsync(int publicNameId, object userState) {
            if ((this.GetLinkedStrategiesByPublicNameIdOperationCompleted == null)) {
                this.GetLinkedStrategiesByPublicNameIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedStrategiesByPublicNameIdOperationCompleted);
            }
            this.InvokeAsync("GetLinkedStrategiesByPublicNameId", new object[] {
                        publicNameId}, this.GetLinkedStrategiesByPublicNameIdOperationCompleted, userState);
        }
        
        private void OnGetLinkedStrategiesByPublicNameIdOperationCompleted(object arg) {
            if ((this.GetLinkedStrategiesByPublicNameIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedStrategiesByPublicNameIdCompleted(this, new GetLinkedStrategiesByPublicNameIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class Ticket : System.Web.Services.Protocols.SoapHeader {
        
        private string ticketIdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string TicketId {
            get {
                return this.ticketIdField;
            }
            set {
                this.ticketIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginUserCompletedEventHandler(object sender, LoginUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStrategyListCompletedEventHandler(object sender, GetStrategyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPublicNameListCompletedEventHandler(object sender, GetPublicNameListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicNameListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicNameListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateApplicationByStrategyIdCompletedEventHandler(object sender, CreateApplicationByStrategyIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateApplicationByStrategyIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateApplicationByStrategyIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateApplicationByPublicNameIdCompletedEventHandler(object sender, CreateApplicationByPublicNameIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateApplicationByPublicNameIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateApplicationByPublicNameIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetApplicationStatusCompletedEventHandler(object sender, GetApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetApplicationResultCompletedEventHandler(object sender, GetApplicationResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStrategySchemaCompletedEventHandler(object sender, GetStrategySchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategySchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategySchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStrategyExampleXMLCompletedEventHandler(object sender, GetStrategyExampleXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategyExampleXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategyExampleXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLatestStrategyIdByStrategyNameCompletedEventHandler(object sender, GetLatestStrategyIdByStrategyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestStrategyIdByStrategyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestStrategyIdByStrategyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLinkedStrategiesByPublicNameIdCompletedEventHandler(object sender, GetLinkedStrategiesByPublicNameIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedStrategiesByPublicNameIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedStrategiesByPublicNameIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591