<?xml version='1.0' encoding='utf-8'?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)" GeneratedClassNamespace="STPC.DynamicForms.Web.Models.Properties" GeneratedClassName="Settings">
  <Profiles />
  <Settings>
    <Setting Name="STPC_DynamicForms_DBConnectionString" Type="(Connection string)" Scope="Application">
      <DesignTimeValue Profile="(Default)">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;SerializableConnectionString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;ConnectionString&gt;Data Source=WIN-DG040MBBGBS\SQLEXPRESS;Initial Catalog=STPC.DynamicForms.DB;Integrated Security=True&lt;/ConnectionString&gt;
  &lt;ProviderName&gt;System.Data.SqlClient&lt;/ProviderName&gt;
&lt;/SerializableConnectionString&gt;</DesignTimeValue>
      <Value Profile="(Default)">Data Source=WIN-DG040MBBGBS\SQLEXPRESS;Initial Catalog=STPC.DynamicForms.DB;Integrated Security=True</Value>
    </Setting>
    <Setting Name="SPMisSolicitudes" Type="System.String" Scope="Application">
      <Value Profile="(Default)">CREATE PROCEDURE [dbo].[spGetAvailableInterviewsUser]
@userid nvarchar(20)

AS
BEGIN

DECLARE @FiltrosWhere nvarchar(1000)
SELECT 
  @FiltrosWhere=
  (CASE 
     WHEN ur.Role_Rolename IN ('Administrador','Gerente General','Gerente de negocio') THEN  ''
	 WHEN ur.Role_Rolename IN ('Auxiliar','Analista') THEN 'AND (t.UpdatedBy = '''+@userid+''' or t.AssignedTo = '''+@userid+''' OR t.CreatedBy='''+@userid+''') AND WorkFlowState NOT IN (''8DD826CA-1E70-4B3A-8566-09BEBB420312'')'
	 ELSE 'AND (t.UpdatedBy = '''+@userid+''' or t.AssignedTo = '''+@userid+''' OR t.CreatedBy='''+@userid+''')'	 
	 END)  
 FROM  [user] u 
INNER JOIN  [UserRole] ur ON ur.[User_Id]=u.Id
WHERE u.Username=@userid

DECLARE @SQLString nvarchar (MAX)
	
SET @SQLString=REPLACE('SELECT DISTINCT t.requestid as [Solicitud],t.FormId,
(CASE  WHEN m.f_requestid IS NULL AND s.Estado LIKE ''%Análisis%'' AND s.Estado NOT LIKE ''%EN ESTUDIO - Análisis financiero%'' THEN ''14A2D529-1A78-4C85-89C8-AE745F8DB31F''
WHEN WorkFlowState = ''280E83F0-BE5A-46AC-8879-BECBF141643C'' THEN ''C266079C-DEF0-4131-801F-7975D3B1D318''
WHEN WorkFlowState = ''272FB96B-EDF5-422E-8692-FB4DDDE2DC93'' THEN ''70A84D8F-2586-41EC-836C-456D7ADF752B''
WHEN WorkFlowState = ''DBF7ECC8-AF7E-4F55-B2C3-B654690D6D70'' THEN ''6D354B29-99E3-4398-A56E-BC906AF96DFF''
WHEN WorkFlowState = ''74616C36-13F0-4F5B-A558-CAD07B082157'' THEN ''375B93A4-3F9F-459D-8570-2A557E4A8502''
WHEN WorkFlowState = ''22939DC3-373C-4067-930C-0EF940AAFF35'' THEN ''1E2A11B5-EAC4-4CB3-8C33-B5187F525264''
WHEN WorkFlowState = ''C7E18914-7B4F-415D-9CA4-9904B552673A'' THEN ''5D450DCD-DAC3-49F1-96A3-6BB2D1D23F1A''
WHEN WorkFlowState = ''ECF3C63F-8E21-422C-A4D8-14C6298A9220'' THEN ''375B93A4-3F9F-459D-8570-2A557E4A8502''
WHEN WorkFlowState in (''5D40A1DC-9FF0-4678-AB0F-BEE34E9C6188'',''9DD3F7BA-C004-4A54-A353-81678DC338A9'') THEN ''C266079C-DEF0-4131-801F-7975D3B1D318''
WHEN WorkFlowState = ''5A8A48F5-A669-4676-8A6B-2BD32102420F'' THEN ''6491083C-7101-4604-AD77-EAE81CF224DB'' 
WHEN WorkFlowState = ''CB4BEB62-564C-4CB5-AFBD-A79A33C64CA3'' THEN  ''1E2A11B5-EAC4-4CB3-8C33-B5187F525264''
WHEN WorkFlowState = ''855C7AB6-2586-464B-8F13-425592008EDA'' THEN  ''1E2A11B5-EAC4-4CB3-8C33-B5187F525264''
WHEN WorkFlowState = ''9601CF6E-5DA4-4D57-80B0-04EC2D7CA566'' THEN  ''3CE78644-BA1E-4DFF-9860-499B025B5061''
WHEN WorkFlowState = ''7A54C168-5473-442A-8B11-3867F98B58B1'' THEN  ''375B93A4-3F9F-459D-8570-2A557E4A8502''
ELSE T.PageFlowId END) AS [PageFlowId], t.requestid as [N Solicitud], ''Aliados'' AS [Tipo Negocio], ''Natural'' AS [Tipo Persona],
s.Identificación, ltrim(s.[Nombre completo]) as Nombre, s.Estado, s.[Tiempo (Min)]
FROM vw_ListaTrabajoAliadosNatural s INNER JOIN request t ON t.requestid = s.Solicitud 
LEFT JOIN VW_UltimoEstablecimiento_Aliados m ON t.requestid = m.f_requestid
INNER JOIN  [user] u ON u.Username='''+@userid+''' INNER JOIN  [UserRole] ur ON ur.[User_Id]=u.Id WHERE 1=1  '+@FiltrosWhere+'
UNION ALL',char(13),' ')

DECLARE @SQLString2 nvarchar (MAX)

SET @SQLString2=
REPLACE('
SELECT t.requestid as [Solicitud],t.FormId,
(CASE  WHEN m.f_requestid IS NULL AND s.Estado LIKE ''%Análisis%'' AND s.Estado NOT LIKE ''%EN ESTUDIO - Análisis financiero%'' THEN ''14A2D529-1A78-4C85-89C8-AE745F8DB31F''
WHEN WorkFlowState = ''280E83F0-BE5A-46AC-8879-BECBF141643C'' THEN ''C266079C-DEF0-4131-801F-7975D3B1D318''
WHEN WorkFlowState = ''272FB96B-EDF5-422E-8692-FB4DDDE2DC93'' THEN ''70A84D8F-2586-41EC-836C-456D7ADF752B''
WHEN WorkFlowState = ''DBF7ECC8-AF7E-4F55-B2C3-B654690D6D70'' THEN ''6D354B29-99E3-4398-A56E-BC906AF96DFF''
WHEN WorkFlowState = ''74616C36-13F0-4F5B-A558-CAD07B082157'' THEN ''375B93A4-3F9F-459D-8570-2A557E4A8502''
WHEN WorkFlowState = ''22939DC3-373C-4067-930C-0EF940AAFF35'' THEN ''1E2A11B5-EAC4-4CB3-8C33-B5187F525264''
WHEN WorkFlowState = ''C7E18914-7B4F-415D-9CA4-9904B552673A'' THEN ''5D450DCD-DAC3-49F1-96A3-6BB2D1D23F1A''
WHEN WorkFlowState = ''ECF3C63F-8E21-422C-A4D8-14C6298A9220'' THEN ''375B93A4-3F9F-459D-8570-2A557E4A8502''
WHEN WorkFlowState in (''5D40A1DC-9FF0-4678-AB0F-BEE34E9C6188'',''9DD3F7BA-C004-4A54-A353-81678DC338A9'') THEN ''C266079C-DEF0-4131-801F-7975D3B1D318''
WHEN WorkFlowState = ''5A8A48F5-A669-4676-8A6B-2BD32102420F'' THEN ''6491083C-7101-4604-AD77-EAE81CF224DB'' 
WHEN WorkFlowState = ''CB4BEB62-564C-4CB5-AFBD-A79A33C64CA3'' THEN  ''1E2A11B5-EAC4-4CB3-8C33-B5187F525264''
WHEN WorkFlowState = ''855C7AB6-2586-464B-8F13-425592008EDA'' THEN  ''1E2A11B5-EAC4-4CB3-8C33-B5187F525264''
WHEN WorkFlowState = ''9601CF6E-5DA4-4D57-80B0-04EC2D7CA566'' THEN  ''F08045D8-7455-464F-B2E7-2D62999F4333''
ELSE T.PageFlowId END) AS [PageFlowId], t.requestid as [N Solicitud], ''Aliados'' AS [Tipo Negocio], ''Jurídica'' AS [Tipo Persona],
s.Identificación, ltrim(s.[Nombre completo]) as Nombre, s.Estado,  s.[Tiempo (Min)] 
FROM [dbo].[Request] t with (nolock) inner join vw_ListaTrabajoAliadosJuridico s on s.Solicitud = t.RequestId LEFT JOIN VW_UltimoEstablecimiento_Aliados m ON t.requestid = m.f_requestid
INNER JOIN  [user] u ON u.Username='''+@userid+''' INNER JOIN  [UserRole] ur ON ur.[User_Id]=u.Id WHERE 1=1  '+@FiltrosWhere+'
 UNION ALL',char(13),' ')


DECLARE @SQLString3 nvarchar (MAX)

SET @SQLString3=
REPLACE('
SELECT t.requestid as [Solicitud]
,t.FormId
,CASE WHEN t.WorkFlowState = ''5056C771-7766-4E4E-9CA2-967C3CA5EEED'' THEN ''53EB2B01-7F1C-4DAC-919F-8A5549319B32''
      WHEN t.WorkFlowState = ''74616C36-13F0-4F5B-A558-CAD07B082157'' THEN ''52DF2C70-157B-4B43-A2FD-D303A2560A4D''
	  WHEN t.WorkFlowState = ''280E83F0-BE5A-46AC-8879-BECBF141643C'' THEN ''8695FDF4-BE08-4271-AE7D-1EA487A1BFD9''
 ELSE t.PageFlowId END AS [PageFlowId]
,t.requestid as [N Solicitud]
,''Venta Empresarial'' AS [Tipo Negocio]
, s.[Tipo Persona],
s.Identificación
,ltrim(s.[Nombre completo]) as Nombre
,s.Estado,  s.[Tiempo (Min)] 
FROM [dbo].[Request] t WITH (NOLOCK)
INNER JOIN VW_ListaTrabajoVentaEmpresarial s on s.Solicitud = t.RequestId 
WHERE 1=1  '+@FiltrosWhere+' UNION ALL',char(13),' ')

DECLARE @SQLString4 nvarchar (MAX)


SET @SQLString4=
REPLACE('
SELECT t.requestid as [Solicitud],t.FormId,
t.PageFlowId, t.requestid as [N Solicitud], ''Otros Medios de Pago'' AS [Tipo Negocio], s.[Tipo Persona],
s.Identificación, ltrim(s.[Nombre completo]) as Nombre, s.Estado,  s.[Tiempo (Min)] 
FROM [dbo].[Request] t with (nolock) inner join VW_ListaTrabajoOtrosMediospago s on s.Solicitud = t.RequestId WHERE 1=1  '+@FiltrosWhere+' UNION ALL',char(13),' ')

DECLARE @SQLString5 nvarchar (MAX)

SET @SQLString5=
REPLACE('
SELECT t.requestid as [Solicitud],t.FormId,
t.PageFlowId, t.requestid as [N Solicitud], ''Inmobiliaria'' AS [Tipo Negocio], s.[Tipo Persona],
s.Identificación, ltrim(s.[Nombre completo]) as Nombre, s.Estado,  s.[Tiempo (Min)] 
FROM [dbo].[Request] t with (nolock) inner join VW_ListaTrabajoInmobiliaria s on s.Solicitud = t.RequestId WHERE 1=1  '+@FiltrosWhere+' UNION ALL',char(13),' ')


DECLARE @SQLString6 nvarchar (MAX)

SET @SQLString6=
REPLACE('
SELECT t.requestid as [Solicitud],t.FormId,
t.PageFlowId, t.requestid as [N Solicitud], ''Venta Institucional'' AS [Tipo Negocio], s.[Tipo Persona],
s.Identificación, ltrim(s.[Nombre completo]) as Nombre, s.Estado,  s.[Tiempo (Min)] 
FROM [dbo].[Request] t with (nolock) inner join  VW_ListaTrabajoVentaInstitucional s on s.Solicitud = t.RequestId WHERE 1=1  '+@FiltrosWhere+' ORDER BY 1 DESC',char(13),' ')


--SELECT @SQLString,@SQLString2,@SQLString3
 EXECUTE  (@SQLString + @SQLString2 + @SQLString3 + @SQLString4 + @SQLString5 + @SQLString6 )


 
END
</Value>
    </Setting>
    <Setting Name="SPInsertRequest" Type="System.String" Scope="Application">
      <Value Profile="(Default)">CREATE PROCEDURE [dbo].[Insert_Request]
@FormId uniqueidentifier,
@WorkFlowState nvarchar(255) = null,
@PageFlowState nvarchar (255) = null,
@PageFlowId uniqueidentifier = null,
@Created datetime,
@CreatedBy nvarchar(255),
@Updated datetime,
@UpdatedBy nvarchar(255)= null,
@AssignedTo nvarchar(255)= null,
@AplicationNameId int= null
AS
BEGIN
insert into [dbo].[Request](
Created,
Updated,
FormId,
WorkFlowState,
PageFlowState,
PageFlowId,
CreatedBy,
UpdatedBy,
AssignedTo,
AplicationNameId
)
values(
@Created,
@Updated,
@FormId,
@WorkFlowState,
@PageFlowState,
@PageFlowId,
@CreatedBy,
@UpdatedBy,
@AssignedTo,
@AplicationNameId
)
SELECT SCOPE_IDENTITY() as RequestId
END
</Value>
    </Setting>
    <Setting Name="SPSearchRequest" Type="System.String" Scope="Application">
      <Value Profile="(Default)">CREATE PROCEDURE [dbo].[SearchRequests]
@Created	DateTime,
@Updated	DateTime,
@Created_End	DateTime,
@Updated_End	DateTime,	
@RequestId	int,	
@CreatedBy	nvarchar(255),	
@UpdatedBy	nvarchar(255),	
@WorkFlowState	varchar(255),	
@Hierarchies	nvarchar(255), 	
@UserName	nvarchar(255),	
@DynamicWhere	nvarchar(max),
@DynamicJoin	nvarchar(max),
@DynamicSelect	nvarchar(max),
@FormId	uniqueidentifier,
@SqlStringOutPut varchar(max) output
AS
BEGIN

SET NOCOUNT ON

DECLARE @FiltroPerfil nvarchar(1000)
SELECT 
  @FiltroPerfil=''
  


SET @SqlStringOutPut = 
'SELECT request.[RequestId] as Solicitud,
	  request.[FormId],
	  request.[PageFlowId], 
	  request.[RequestId] as [Num. Solicitud], 
	 ''Natural'' [Tipo persona],
      s.F_intNumeroIdentificacionPn as Identificación,
	 ltrim(rtrim(F_varPrimerApellidoPn))+'' ''+ltrim(rtrim(F_varPrimerNombrePn))+'' ''+ltrim(rtrim(F_varSegundoApellidoPn))+'' ''+ltrim(rtrim(F_varSegundoNombrePn)) as [Nombre completo],
	 e.StateName  as Estado	 
  FROM [dbo].[Request] with (nolock) inner join VW_InformacionBasica_Aliados s with (nolock)
  on s.f_requestId = request.RequestId
  inner join FormStates e with (nolock)
  on request.WorkFlowState = e.UId
  INNER JOIN  [user] u ON u.Username='''+@UserName+'''
  INNER JOIN  [UserRole] ur ON ur.[User_Id]=u.Id '+@DynamicJoin
  +' WHERE 1=1 '+ @DynamicWhere
  + CASE WHEN YEAR(@Created)&gt;1900 THEN ' AND CONVERT(DATE,Request.Created) between '''+CONVERT(nvarchar,@Created,112)+''' AND '''+CONVERT(nvarchar,@Created_End,112)+'''' ELSE '' END
  + CASE WHEN YEAR(@Updated)&gt;1900 THEN ' AND CONVERT(DATE,Request.Updated) between '''+CONVERT(nvarchar,@Updated,112)+''' AND '''+CONVERT(nvarchar,@Updated_End,112)+'''' ELSE '' END
  + CASE WHEN @RequestId&gt;0 THEN ' AND Request.RequestId = '+CONVERT(nvarchar,@RequestId) ELSE '' END
  + CASE WHEN @CreatedBy&lt;&gt;'' THEN ' AND Request.CreatedBy = '''+@CreatedBy+'''' ELSE '' END
  + CASE WHEN @UpdatedBy&lt;&gt;'' THEN ' AND Request.UpdatedBy = '''+@UpdatedBy+'''' ELSE '' END
  + CASE WHEN @WorkFlowState&lt;&gt;'' THEN ' AND Request.WorkFlowState = '''+@WorkFlowState+'''' ELSE '' END
  + CASE WHEN @Hierarchies&lt;&gt;'' THEN ' AND o.[key]  IN ('+@Hierarchies+')' ELSE '' END  
  + @FiltroPerfil
  + ' UNION ALL
  SELECT request.[RequestId] as Solicitud,
	  request.[FormId],
	  request.[PageFlowId], 
	  request.[RequestId] as [Num. Solicitud],  
	  ''Juridico ''[Tipo persona],
      s.F_intNitEmpresaPj as Identificación,
	 ltrim(rtrim(F_varNombreEmpresaPj))  as [Nombre completo],
	 e.StateName  as Estado	 
  FROM [dbo].[Request] with (nolock) inner join VW_InformacionBasicaPJ_Aliados s with (nolock)
  on s.f_requestId = request.RequestId
  inner join FormStates e with (nolock)
  on request.WorkFlowState = e.UId
   INNER JOIN  [user] u ON u.Username='''+@UserName+'''
  INNER JOIN  [UserRole] ur ON ur.[User_Id]=u.Id '+@DynamicJoin
  +' WHERE 1=1 '+@DynamicWhere
  + CASE WHEN YEAR(@Created)&gt;1900 THEN ' AND CONVERT(DATE,Request.Created) between '''+CONVERT(nvarchar,@Created,112)+''' AND '''+CONVERT(nvarchar,@Created_End,112)+'''' ELSE '' END
  + CASE WHEN YEAR(@Updated)&gt;1900 THEN ' AND CONVERT(DATE,Request.Updated) between '''+CONVERT(nvarchar,@Updated,112)+''' AND '''+CONVERT(nvarchar,@Updated_End,112)+'''' ELSE '' END
  + CASE WHEN @RequestId&gt;0 THEN ' AND Request.RequestId = '+CONVERT(nvarchar,@RequestId) ELSE '' END
  + CASE WHEN @CreatedBy&lt;&gt;'' THEN ' AND Request.CreatedBy = '''+@CreatedBy+'''' ELSE '' END
  + CASE WHEN @UpdatedBy&lt;&gt;'' THEN ' AND Request.UpdatedBy = '''+@UpdatedBy+'''' ELSE '' END
  + CASE WHEN @WorkFlowState&lt;&gt;'' THEN ' AND Request.WorkFlowState = '''+@WorkFlowState+'''' ELSE '' END
  + CASE WHEN @Hierarchies&lt;&gt;'' THEN ' AND o.[key]  IN ('+@Hierarchies+')' ELSE '' END  
  + @FiltroPerfil
  
--  SELECT * FROM TempSearchRequests order by 2
  insert into TempSearchRequests
select newid(),GETDATE(),@Updated,@Created_End,@Updated_End,@RequestId,@CreatedBy,@UpdatedBy,@WorkFlowState,@Hierarchies,@UserName,@DynamicWhere,@DynamicJoin,@DynamicSelect,@FormId,@SqlStringOutPut

--SELECT @SqlStringOutPut
 EXEC(@SqlStringOutPut)
  --select * from TempSearchRequests order by 2
  --truncate table TempSearchRequests




END
</Value>
    </Setting>
    <Setting Name="SPSelect_RequestById" Type="System.String" Scope="Application">
      <Value Profile="(Default)">CREATE PROCEDURE [dbo].[Select_RequestById]
@RequestId int
AS
BEGIN
SELECT RequestId,
Created,
Updated,
FormId,
WorkFlowState,
PageFlowState,
PageFlowId,
CreatedBy,
UpdatedBy
from Request
where RequestId = @RequestId
END
</Value>
    </Setting>
    <Setting Name="SPUpdate_Request" Type="System.String" Scope="Application">
      <Value Profile="(Default)">CREATE PROCEDURE [dbo].[Update_Request]
@RequestId int,
@PageFlowState varchar(255),
@PageFlowId uniqueidentifier,
@Updated datetime,
@UpdatedBy varchar(255),
@WorkFlowState varchar(255)
AS
BEGIN
Update [dbo].[Request]	
set PageFlowState = @PageFlowState,
PageFlowId = @PageFlowId,
UpdatedBy = @UpdatedBy,
Updated = GETDATE(),
WorkFlowState=@WorkFlowState
where [RequestId] = @RequestId
END

</Value>
    </Setting>
    <Setting Name="SPGetUsersByStates" Type="System.String" Scope="Application">
      <Value Profile="(Default)">CREATE PROCEDURE [dbo].[GetUserFormPageActionsByState] (@formstateUID AS UNIQUEIDENTIFIER,@PageId AS UNIQUEIDENTIFIER,@username AS NVARCHAR(255))
AS
--Variables de prueba
--DECLARE @formstateUID AS UNIQUEIDENTIFIER
--DECLARE @PageId AS UNIQUEIDENTIFIER
--DECLARE @username AS NVARCHAR(255)
--SET @formstateUID='00000000-0000-0000-0000-000000000000' 
--SET @PageId='fb21dc1e-40e3-47e9-bcf5-3051f8e79f85'--
--SET @username='CC1'

/*
EXEC	 [dbo].[GetUserFormPageActionsByState] '00000000-0000-0000-0000-000000000000'
, 'fb21dc1e-40e3-47e9-bcf5-3051f8e79f85','CC1'
*/

SELECT DISTINCT FPA.Uid,fpa.Name,fpa.[Description] AS [description],fpa.Caption,fpa.IsAssociated,fpa.IsExecuteStrategy,fpa.PageId
	,fpa.DisplayOrder,fpa.[Save],fpa.GoToPageId,fpa.FormStatesUid,fpa.FormPage_Uid,fpa.ShowSuccessMessage
	,fpa.ShowFailureMessage,fpa.StrategyID
FROM dbo.FormPage FP
INNER JOIN dbo.FormPageActions FPA
ON FP.Uid=FPA.Pageid
INNER JOIN dbo.FormPageActionsByStates FPAS
ON FPA.Uid = FPAS.FormPageActionsUid
AND fpas.FormStatesUid=@formstateUID
INNER JOIN	dbo.FormPageActionsRoles fpar
ON fpa.Uid=fpar.FormPageActionsUid
INNER JOIN DBO.UserRole ur
ON ur.Role_Rolename=fpar.Rolename
INNER JOIN dbo.[User] 
ON [user].id=ur.[USER_ID]
WHERE  fp.Uid=@PageId
AND [user].Username=@username 
ORDER BY fpa.DisplayOrder</Value>
    </Setting>
  </Settings>
</SettingsFile>