@model STPC.DynamicForms.Web.Models.FormFieldViewModel
@using STPC.DynamicForms.Web.Helpers
<div class="FormField">
    @using (Html.BeginCollectionItem("formfields"))
    {   
        <fieldset style="border-color: lightgray; border-style: solid; border-width: thin; padding: 8px 8px 8px 8px;">
            <legend></legend>
            <table>
                @{Html.RenderPartial("_FieldsEditorCommonTopRow", Model);}
                <tr>
                    <td class="field-options">Mensaje
                    </td>
                    <td colspan="3">
                        @Html.TextAreaFor(formfield => formfield.FormFieldPrompt)
                        @Html.ValidationMessageFor(formfield => formfield.FormFieldPrompt)
                    </td>
                </tr>
                <tr>
                    <td>
                        <br />
                    </td>
                </tr>
                <tr>
                    <td class="field-options">Opciones
                    </td>
                    <td colspan="3">
                        <input id="listaPredefinidas @Model.Uid" type="radio" name="OptionsMode @Model.Uid" value="list"  
                        @if (Model.OptionsMode == "list")
                        {
                            <text>checked="checked"</text>
                        }
                 style="display:inline-block"/>Opciones a continuación una por linea<br />
                        @Html.TextAreaFor(formfield => formfield.Options)
                        @*@Html.ValidationMessageFor(formfield => formfield.Options)*@
                        <br />
                        <input id="listaCategorias @Model.Uid" type="radio" name="OptionsMode @Model.Uid" value="local" 
                        @if (Model.OptionsMode == "local")
                        {
                            <text>checked="checked"</text>
                        }
               style="display:inline-block"/>Opciones predefinidas en categorias<br />
                        @Html.DropDownListFor(formfield => formfield.OptionsCategoryName,
                            new SelectList((IEnumerable<SelectListItem>)ViewBag.CategoriesSelect, "Value", "Text", Model.OptionsCategoryName))
                        <br />
                        <input id="webServiceList @Model.Uid" type="radio" name="OptionsMode @Model.Uid" value="ws" 
                        @if (Model.OptionsMode == "ws")
                        {
                           <text>checked="checked"</text>
                        }
               style="display:inline-block"/>Obtener opciones desde un webservice
                    @Html.Label("URL")
                        @Html.TextBoxFor(formfield => formfield.OptionsWebServiceUrl)
                        <br />
                        <input id="decisionEngineList @Model.Uid" type="radio" name="OptionsMode @Model.Uid" value="strat" 
                        @if (Model.OptionsMode == "strat")
                        {
                            <text>checked="checked"</text>
                        }
               style="display:inline-block"/>Obtener opciones desde Motor Decisión<br />
                        @Html.DropDownList("Strategies", new SelectList((IEnumerable<SelectListItem>)ViewBag.StrategiesSelect, "Value", "Text", ViewData["OptionStrategyValue" + Model.Uid.ToString()]))
                    </td>
                </tr>
                <tr>
                    <td class="field-options">Orientacion
                    </td>
                    <td colspan="3">
                        @Html.RadioButtonFor(formfield => formfield.Orientation, "vertical", new { @style = "display:inline-block" })Vertical
                    @Html.RadioButtonFor(formfield => formfield.Orientation, "horizontal", new { @style = "display:inline-block" })Horizontal
                    </td>
                </tr>
            </table>
        </fieldset>
        <br />
    }
</div>
