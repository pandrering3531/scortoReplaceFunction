//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STPC.DynamicForms.Web.Services.Request {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://STPC.LiSim.Abc")]
    [System.SerializableAttribute()]
    public partial class Request : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PageFlowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageFlowStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> WorkFlowStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToField, value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((this.FormIdField.Equals(value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PageFlowId {
            get {
                return this.PageFlowIdField;
            }
            set {
                if ((this.PageFlowIdField.Equals(value) != true)) {
                    this.PageFlowIdField = value;
                    this.RaisePropertyChanged("PageFlowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageFlowState {
            get {
                return this.PageFlowStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PageFlowStateField, value) != true)) {
                    this.PageFlowStateField = value;
                    this.RaisePropertyChanged("PageFlowState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> WorkFlowState {
            get {
                return this.WorkFlowStateField;
            }
            set {
                if ((this.WorkFlowStateField.Equals(value) != true)) {
                    this.WorkFlowStateField = value;
                    this.RaisePropertyChanged("WorkFlowState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormData", Namespace="http://schemas.datacontract.org/2004/07/STPC.DynamicForms.Services.RequestService" +
        "")]
    [System.SerializableAttribute()]
    public partial class FormData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FormPageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormPageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PageFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PanelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((this.FormIdField.Equals(value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormPageId {
            get {
                return this.FormPageIdField;
            }
            set {
                if ((this.FormPageIdField.Equals(value) != true)) {
                    this.FormPageIdField = value;
                    this.RaisePropertyChanged("FormPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormPageName {
            get {
                return this.FormPageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormPageNameField, value) != true)) {
                    this.FormPageNameField = value;
                    this.RaisePropertyChanged("FormPageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> PageFields {
            get {
                return this.PageFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageFieldsField, value) != true)) {
                    this.PageFieldsField = value;
                    this.RaisePropertyChanged("PageFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PanelId {
            get {
                return this.PanelIdField;
            }
            set {
                if ((this.PanelIdField.Equals(value) != true)) {
                    this.PanelIdField = value;
                    this.RaisePropertyChanged("PanelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PanelName {
            get {
                return this.PanelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelNameField, value) != true)) {
                    this.PanelNameField = value;
                    this.RaisePropertyChanged("PanelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.Request.IRequestService")]
    public interface IRequestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequest", ReplyAction="http://tempuri.org/IRequestService/GetRequestResponse")]
        STPC.DynamicForms.Web.Services.Request.Request[] GetRequest(System.Collections.Generic.Dictionary<string, string> values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestDynamic", ReplyAction="http://tempuri.org/IRequestService/GetRequestDynamicResponse")]
        STPC.DynamicForms.Core.MyViewModel GetRequestDynamic(STPC.DynamicForms.Core.ReportParameters[] values, System.Collections.Generic.Dictionary<string, string> ParametersRequestTable, string RequesType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestByProcedure", ReplyAction="http://tempuri.org/IRequestService/GetRequestByProcedureResponse")]
        STPC.DynamicForms.Core.MyViewModel GetRequestByProcedure(string iStoreProcedureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetIndicatorByProcedure", ReplyAction="http://tempuri.org/IRequestService/GetIndicatorByProcedureResponse")]
        STPC.DynamicForms.Core.MyViewModel GetIndicatorByProcedure(string storedProcedure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestsByParamProcedure", ReplyAction="http://tempuri.org/IRequestService/GetRequestsByParamProcedureResponse")]
        STPC.DynamicForms.Core.MyViewModel GetRequestsByParamProcedure(string iStoreProcedureName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetSchemaTable", ReplyAction="http://tempuri.org/IRequestService/GetSchemaTableResponse")]
        STPC.DynamicForms.Core.MyViewModel GetSchemaTable(string tableName, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/InsertAtributesHierarchy", ReplyAction="http://tempuri.org/IRequestService/InsertAtributesHierarchyResponse")]
        void InsertAtributesHierarchy(System.Collections.Generic.Dictionary<string, string> listFieldsValues, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/UpdateAtributesHierarchy", ReplyAction="http://tempuri.org/IRequestService/UpdateAtributesHierarchyResponse")]
        void UpdateAtributesHierarchy(System.Collections.Generic.Dictionary<string, string> listFieldsValues, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/FindRecordIntoAtributeTable", ReplyAction="http://tempuri.org/IRequestService/FindRecordIntoAtributeTableResponse")]
        int FindRecordIntoAtributeTable(string tableName, int nodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/CreateRequest", ReplyAction="http://tempuri.org/IRequestService/CreateRequestResponse")]
        int CreateRequest(STPC.DynamicForms.Web.Services.Request.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/CreatePageFlowStepInstance", ReplyAction="http://tempuri.org/IRequestService/CreatePageFlowStepInstanceResponse")]
        string CreatePageFlowStepInstance(STPC.DynamicForms.Web.Services.Request.Request request, System.Guid formPageId, string formName, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/NewPageFlowStepInstance", ReplyAction="http://tempuri.org/IRequestService/NewPageFlowStepInstanceResponse")]
        string NewPageFlowStepInstance(STPC.DynamicForms.Web.Services.Request.Request request, STPC.DynamicForms.Web.Services.Request.FormData pageData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetPageFlowStepInstance", ReplyAction="http://tempuri.org/IRequestService/GetPageFlowStepInstanceResponse")]
        STPC.DynamicForms.Core.Values[] GetPageFlowStepInstance(int requestId, System.Guid formPageId, System.Guid PageFlowId, string formName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestById", ReplyAction="http://tempuri.org/IRequestService/GetRequestByIdResponse")]
        STPC.DynamicForms.Web.Services.Request.Request GetRequestById(int iRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/UpdateRequest", ReplyAction="http://tempuri.org/IRequestService/UpdateRequestResponse")]
        void UpdateRequest(STPC.DynamicForms.Web.Services.Request.Request request, System.Guid formPageId, string formName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/InsertDecisionEngineResult", ReplyAction="http://tempuri.org/IRequestService/InsertDecisionEngineResultResponse")]
        void InsertDecisionEngineResult(System.Xml.Linq.XElement xmlDecisionEngineResult, int requestId, string updatedBy, string tableToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetUserFormPageActionsByState", ReplyAction="http://tempuri.org/IRequestService/GetUserFormPageActionsByStateResponse")]
        STPC.DynamicForms.Web.Common.Services.Users.FormPageActions[] GetUserFormPageActionsByState(string roleName, System.Guid pageId, System.Guid formStateId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestServiceChannel : STPC.DynamicForms.Web.Services.Request.IRequestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestServiceClient : System.ServiceModel.ClientBase<STPC.DynamicForms.Web.Services.Request.IRequestService>, STPC.DynamicForms.Web.Services.Request.IRequestService {
        
        public RequestServiceClient() {
        }
        
        public RequestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public STPC.DynamicForms.Web.Services.Request.Request[] GetRequest(System.Collections.Generic.Dictionary<string, string> values) {
            return base.Channel.GetRequest(values);
        }
        
        public STPC.DynamicForms.Core.MyViewModel GetRequestDynamic(STPC.DynamicForms.Core.ReportParameters[] values, System.Collections.Generic.Dictionary<string, string> ParametersRequestTable, string RequesType) {
            return base.Channel.GetRequestDynamic(values, ParametersRequestTable, RequesType);
        }
        
        public STPC.DynamicForms.Core.MyViewModel GetRequestByProcedure(string iStoreProcedureName) {
            return base.Channel.GetRequestByProcedure(iStoreProcedureName);
        }
        
        public STPC.DynamicForms.Core.MyViewModel GetIndicatorByProcedure(string storedProcedure) {
            return base.Channel.GetIndicatorByProcedure(storedProcedure);
        }
        
        public STPC.DynamicForms.Core.MyViewModel GetRequestsByParamProcedure(string iStoreProcedureName, string userName) {
            return base.Channel.GetRequestsByParamProcedure(iStoreProcedureName, userName);
        }
        
        public STPC.DynamicForms.Core.MyViewModel GetSchemaTable(string tableName, int nodeId) {
            return base.Channel.GetSchemaTable(tableName, nodeId);
        }
        
        public void InsertAtributesHierarchy(System.Collections.Generic.Dictionary<string, string> listFieldsValues, string table) {
            base.Channel.InsertAtributesHierarchy(listFieldsValues, table);
        }
        
        public void UpdateAtributesHierarchy(System.Collections.Generic.Dictionary<string, string> listFieldsValues, string table) {
            base.Channel.UpdateAtributesHierarchy(listFieldsValues, table);
        }
        
        public int FindRecordIntoAtributeTable(string tableName, int nodeId) {
            return base.Channel.FindRecordIntoAtributeTable(tableName, nodeId);
        }
        
        public int CreateRequest(STPC.DynamicForms.Web.Services.Request.Request request) {
            return base.Channel.CreateRequest(request);
        }
        
        public string CreatePageFlowStepInstance(STPC.DynamicForms.Web.Services.Request.Request request, System.Guid formPageId, string formName, string xml) {
            return base.Channel.CreatePageFlowStepInstance(request, formPageId, formName, xml);
        }
        
        public string NewPageFlowStepInstance(STPC.DynamicForms.Web.Services.Request.Request request, STPC.DynamicForms.Web.Services.Request.FormData pageData) {
            return base.Channel.NewPageFlowStepInstance(request, pageData);
        }
        
        public STPC.DynamicForms.Core.Values[] GetPageFlowStepInstance(int requestId, System.Guid formPageId, System.Guid PageFlowId, string formName) {
            return base.Channel.GetPageFlowStepInstance(requestId, formPageId, PageFlowId, formName);
        }
        
        public STPC.DynamicForms.Web.Services.Request.Request GetRequestById(int iRequestId) {
            return base.Channel.GetRequestById(iRequestId);
        }
        
        public void UpdateRequest(STPC.DynamicForms.Web.Services.Request.Request request, System.Guid formPageId, string formName) {
            base.Channel.UpdateRequest(request, formPageId, formName);
        }
        
        public void InsertDecisionEngineResult(System.Xml.Linq.XElement xmlDecisionEngineResult, int requestId, string updatedBy, string tableToInsert) {
            base.Channel.InsertDecisionEngineResult(xmlDecisionEngineResult, requestId, updatedBy, tableToInsert);
        }
        
        public STPC.DynamicForms.Web.Common.Services.Users.FormPageActions[] GetUserFormPageActionsByState(string roleName, System.Guid pageId, System.Guid formStateId) {
            return base.Channel.GetUserFormPageActionsByState(roleName, pageId, formStateId);
        }
    }
}
